#@ circleci.com project build configuration.
#@ see https://circleci.com/docs/1.0/configuration/


#@
#@ customize the virtual machine
#@
machine:
  timezone:
    America/Los_Angeles
  node:
    version: 0.10.26
  python:
    version: 2.7.11
  services:
    # - mongodb
  environment:
    # PYENV_ROOT: "$HOME/.pyenv"
    GCLOUD_PROJECT_ID: grgrynch
    GCLOUD_PROJECT_NO: 466510373200


## unused stage..
checkout:
  override:
  post:
    - . build/ci/checkout/virtualenv-setup.sh


#@
#@ customize dependencies
#@
dependencies:

  pre:
    #@ set logging only to >= warning.
    - npm config set loglevel warn
    - . build/ci/dependencies/paver-setup.sh

  override:
    - pyenv exec paver bootstrap_server;
    - pyenv exec paver bootstrap_client;
    # - pyenv exec paver bootstrap
    # - pyenv exec paver build
    # - pyenv exec paver build_client
    # - pyenv exec paver build_server

    # # seed the database with test data
    # - pyenv exec paver serve
    # - pyenv exec paver dbseed
    # - pyenv exec paver stop


test:
  override:
    #@ execute client functional & unit tests
    - pyenv exec paver test_client

    #@ execute python functional & integration tests
    - pyenv exec paver test_server --mode integration

    #@ execute casperjs end-to-end tests
    - pyenv exec paver test_headless_browser


deployment:

  #@ deploy develop branch to integration environment
  integration:
    branch: develop
    commands:
      - pyenv exec paver dist   --env_id integration
      - pyenv exec paver deploy --default
      - pyenv exec paver dbseed --env_id integration

  #@ deploy prod branch to qa environment
  qa:
    branch: prod
    commands:
      - pyenv exec paver dist   --env_id qa
      - pyenv exec paver deploy --default
      - pyenv exec paver dbseed --env_id qa
